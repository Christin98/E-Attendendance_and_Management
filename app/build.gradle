apply plugin: 'com.android.application'

android {
    signingConfigs {
        christineattendance {
            storeFile file('C:\\Users\\Christin\\AndroidStudioProjects\\EAttendance\\app\\christineattendence.jks')
            storePassword 'CHRISTIN'
            keyAlias = 'CHRISTIN'
            keyPassword 'CHRISTIN'
        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    def versionPropsFile = file('version.properties')
    def value = 0
    Properties versionProps = new Properties()
    if (!versionPropsFile.exists()) {
        versionProps['VERSION_PATCH'] = "0"
        versionProps['VERSION_NUMBER'] = "0"
        versionProps['VERSION_BUILD'] = "-1"
        versionProps.store(versionPropsFile.newWriter(), null)
    }

    def runTasks = gradle.startParameter.taskNames
    if ('assembleRelease' in runTasks) {
        value = 1
    }

    def mVersionName = ""
    def mFileName = ""

    if (versionPropsFile.canRead()) {
        versionProps.load(new FileInputStream(versionPropsFile))

        versionProps['VERSION_PATCH'] = (versionProps['VERSION_PATCH'].toInteger() + 1).toString()
        versionProps['VERSION_NUMBER'] = (versionProps['VERSION_NUMBER'].toInteger() + 1).toString()
        versionProps['VERSION_BUILD'] = (versionProps['VERSION_BUILD'].toInteger() + 1).toString()

        versionProps.store(versionPropsFile.newWriter(), null)
        mVersionName = "v1.${versionProps['VERSION_NUMBER']}.${versionProps['VERSION_PATCH']}"
        mFileName = "AppName-${mVersionName}.apk"

        defaultConfig {
            applicationId "com.project.minor.e_attendance"
            minSdkVersion 18
            targetSdkVersion 29
            versionCode versionProps['VERSION_NUMBER'].toInteger()
            versionName "${mVersionName} (${versionProps['VERSION_BUILD']})"
            testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        }
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }
    if ('assembleRelease' in runTasks) {
        applicationVariants.all { variant ->
            variant.outputs.all { output ->
                if (output.outputFile != null && output.outputFile.name.endsWith('.apk')) {
                    outputFileName = mFileName
                }
            }
        }
    }

    task copyApkFiles(type: Copy) {
        from 'build/outputs/apk/release'
        into '../apk'
        include mFileName
    }

    afterEvaluate {
        assembleRelease.doLast {
            tasks.copyApkFiles
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.christineattendance
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.2.0-beta01'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-beta4'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation "com.airbnb.android:lottie:3.4.0"
    implementation 'com.google.firebase:firebase-analytics:17.3.0'
    implementation 'com.google.firebase:firebase-database:19.2.1'
    implementation 'com.google.firebase:firebase-storage:19.1.1'
    implementation 'net.sourceforge.jexcelapi:jxl:2.6.12'

    annotationProcessor 'com.jakewharton:butterknife:10.2.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.1'
    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test:runner:1.3.0-beta01'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0-alpha05'
    implementation 'androidx.recyclerview:recyclerview:1.2.0-alpha02'
}

apply plugin: 'com.google.gms.google-services'
